{"version":3,"sources":["serviceWorker.js","components/login/styles.js","components/login/login.js","components/signup/styles.js","components/signup/signup.js","components/chatlist/index.js","components/chatlist/chatList.js","components/dashboard/styles.js","components/chatview/styles.js","components/chatview/chatview.js","components/chattextbox/index.js","components/chattextbox/chatTextBox.js","components/newchat/index.js","components/newchat/newChat.js","components/dashboard/dashboard.js","index.js"],"names":["Boolean","window","location","hostname","match","styles","theme","main","width","display","marginLeft","spacing","unit","marginRight","breakpoints","up","squares","margin","alignItems","float","color","paper","marginTop","flexDirection","padding","form","submit","noAccountHeader","paddingTop","signUpLink","textDecoration","fontWeight","errorText","textAlign","firebase","require","LoginComponent","userTyping","type","e","setState","email","target","value","password","submitLogin","preventDefault","auth","signInWithEmailAndPassword","state","then","props","history","push","err","serverError","console","log","classes","this","className","CssBaseline","size","Paper","Typography","component","variant","onSubmit","FormControl","required","fullWidth","InputLabel","htmlFor","Input","autoComplete","autoFocus","id","onChange","Button","to","React","Component","withStyles","hasAccountHeader","logInLink","SignupComponent","formIsValid","passwordConformation","submitSignup","createUserWithEmailAndPassword","authRes","userObj","user","firestore","collection","doc","set","dbError","signupError","authError","root","backgroundColor","palette","background","height","position","left","boxShadow","listItem","cursor","newChatBtn","borderRadius","unreadMessage","top","right","ChatListComponent","userIsSender","chat","messages","length","sender","userEmail","newChat","newChatBtnFn","selectChat","index","selectChatFn","chats","onClick","List","map","_chat","_index","key","ListItem","selected","selectedChatIndex","ListItemAvatar","Avatar","alt","users","filter","_user","split","ListItemText","primary","secondary","Fragment","message","substring","receiverHasRead","ListItemIcon","Divider","signOutBtn","bottom","flower","transform","content","overflow","boxSizing","overflowY","userSent","clear","wordWrap","friendSent","chatHeader","fontSize","ChatViewComponent","componentDidUpdate","container","document","getElementById","scrollTo","scrollHeight","undefined","_usr","_msg","sendBtn","chatTextBoxContainer","chatTextBox","ChatTextBoxComponent","keyCode","submitMessage","chatText","messageValid","txt","replace","userClickedInput","messageReadFn","submitMessageFn","TextField","placeholder","onKeyUp","onFocus","input","NewChatComponent","username","submitNewChat","a","userExists","chatExists","goToChat","createChat","newChatSubmitFn","sendTo","goToChatFn","buildDocKey","currentUser","sort","join","docKey","get","exists","usersSnapshot","docs","_doc","data","includes","DashboardComponent","signOut","chatIndex","selectedChat","newChatFormVisible","messageRead","msg","update","FieldValue","arrayUnion","timestamp","Date","now","friend","newChatBtnClicked","clickedChatWhereNotSender","usersInChat","find","every","indexOf","newChatSubmit","chatObj","componentDidMount","onAuthStateChanged","where","onSnapshot","res","userClickedInputFn","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","routing","path","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e64bcfe5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const styles = theme => ({\r\n    main: {\r\n      width: 'auto',\r\n      display: 'block', // Fix IE 11 issue.\r\n      marginLeft: theme.spacing.unit * 3,\r\n      marginRight: theme.spacing.unit * 3,\r\n      [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n        width: 400,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n      },\r\n      borderRadius: '5px'\r\n    },\r\n    squares: {\r\n      margin: 'auto',\r\n      alignItems: 'center',\r\n      display: 'flex',\r\n      float: 'left',\r\n      color: '#000'\r\n    },\r\n    paper: {\r\n      marginTop: theme.spacing.unit * 8,\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'right',\r\n      padding: `${theme.spacing.unit * 4}px ${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px`,\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      marginTop: theme.spacing.unit,\r\n    },\r\n    submit: {\r\n      marginTop: theme.spacing.unit * 2.5,\r\n    },\r\n    noAccountHeader: {\r\n      width: '100%',\r\n      paddingTop: '10px'\r\n    },\r\n    signUpLink: {\r\n      width: '100%',\r\n      textDecoration: 'none',\r\n      color: '#303f9f',\r\n      fontWeight: 'bolder',\r\n    },\r\n    errorText: {\r\n      color: 'red',\r\n      textAlign: 'center'\r\n    }\r\n  });\r\n  \r\n  export default styles;","import { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nimport styles from './styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport ScalingSquaresSpinner from '@bit/bondz.react-epic-spinners.scaling-squares-spinner';\r\n\r\n\r\nconst firebase = require(\"firebase\");\r\n\r\nclass LoginComponent extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: null,\r\n            password: null,\r\n            serverError: ''\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        const { classes } = this.props;\r\n\r\n        return(\r\n            <main className={classes.main}>\r\n                <CssBaseline/>\r\n                <ScalingSquaresSpinner className={classes.squares} color='#000000'\r\n                size='100'></ScalingSquaresSpinner>\r\n                <Paper className={classes.paper}>\r\n                    <Typography component='h1' variant='h5'>\r\n                        Log In!\r\n                    </Typography>\r\n                    <form onSubmit={(e) => this.submitLogin(e)} className={classes.form}>\r\n                        <FormControl required fullWidth margin='normal'>\r\n                            <InputLabel htmlFor='login-email-input'>Enter Your Email</InputLabel>\r\n                            <Input autoComplete='email' autoFocus id='login-email-input' onChange={(e) => this.userTyping('email', e)}></Input>\r\n                        </FormControl>\r\n                        <FormControl required fullWidth margin='normal'>\r\n                            <InputLabel htmlFor='login-password-input'>Enter Your Password</InputLabel>\r\n                            <Input type='password' autoComplete='password' id='login-password-input' onChange={(e) => this.userTyping('password', e)}></Input>\r\n                        </FormControl>\r\n                        <Button type='submit' fullWidth variant='contained'color='primary' className={classes.submit}>LOG IN</Button>\r\n                    </form>\r\n                    {\r\n                        this.state.serverError ? \r\n                        <Typography className={classes.errorText} component='h5' variant='h6'>\r\n                            Incorrect Login Information\r\n                        </Typography> :\r\n                        null\r\n                    }\r\n                    <h5 className={classes.noAccountHeader}>Don't Have An Account?</h5>\r\n                    <Link className={classes.signUpLink} to='/signup'>Sign Up!</Link>\r\n                </Paper>\r\n            \r\n            </main>\r\n            // </div>\r\n            \r\n        );\r\n    }\r\n\r\n    userTyping = (type, e) => {\r\n        switch (type) {\r\n            case 'email':\r\n                this.setState({ email: e.target.value })\r\n                break;\r\n            \r\n            case 'password':\r\n                this.setState({ password: e.target.value })\r\n                break;\r\n            \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    submitLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(this.state.email, this.state.password)\r\n            .then(() => {\r\n                this.props.history.push('/dashboard');\r\n            }, err => {\r\n                this.setState({ serverError: true });\r\n                console.log('Error logging in: ', err);\r\n            });\r\n    };\r\n}\r\n\r\n\r\n\r\nexport default withStyles(styles)(LoginComponent);\r\n\r\n","const styles = theme => ({\r\n    main: {\r\n      width: 'auto',\r\n      display: 'block', // Fix IE 11 issue.\r\n      marginLeft: theme.spacing.unit * 3,\r\n      marginRight: theme.spacing.unit * 3,\r\n      [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n        width: 400,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n      },\r\n    },\r\n    paper: {\r\n      marginTop: theme.spacing.unit * 8,\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      marginTop: theme.spacing.unit,\r\n    },\r\n    submit: {\r\n      marginTop: theme.spacing.unit * 3,\r\n    },\r\n    hasAccountHeader: {\r\n      width: '100%'\r\n    },\r\n    logInLink: {\r\n      width: '100%',\r\n      textDecoration: 'none',\r\n      color: '#303f9f',\r\n      fontWeight: 'bolder'\r\n    },\r\n    errorText: {\r\n      color: 'red',\r\n      textAlign: 'center'\r\n    }\r\n  });\r\n  \r\n  export default styles;","import { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nimport styles from './styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nconst firebase = require(\"firebase\");\r\n\r\nclass SignupComponent extends React.Component {\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: null,\r\n            password: null,\r\n            passwordConformation: null,\r\n            signupError: ''\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        const { classes } = this.props;\r\n\r\n        return(\r\n            <main className={classes.main}>\r\n                <CssBaseline></CssBaseline>\r\n                <Paper className={classes.paper}>\r\n                    <Typography component='h1' variant='h5'>\r\n                        Sign Up!\r\n                    </Typography>\r\n                    <form onSubmit={(e) => this.submitSignup(e)} className={classes.form}>\r\n                        <FormControl required fullWidth margin='normal'>\r\n                            <InputLabel htmlFor='signup-email-input'>Enter your Email</InputLabel>\r\n                            <Input autoComplete='email' autoFocus id='signup-email-input' onChange={(e) => this.userTyping('email', e)}></Input>\r\n                        </FormControl>\r\n                        <FormControl required fullWidth margin='normal'>\r\n                            <InputLabel htmlFor='signup-password-input'>Create A Password</InputLabel>\r\n                            <Input type='password' id='signup-password-input' onChange={(e) => this.userTyping('password', e)}></Input>\r\n                        </FormControl>\r\n                        <FormControl required fullWidth margin='normal'>\r\n                            <InputLabel htmlFor='signup-password-conformation-input'>Confirm Your Password</InputLabel>\r\n                            <Input type='password' id='signup-password-conformation-input' onChange={(e) => this.userTyping('passwordConformation', e)}></Input>\r\n                        </FormControl>\r\n                        <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>Submit</Button>\r\n                    </form>\r\n                    {\r\n                        this.state.signupError ? \r\n                        <Typography className={classes.errorText} component='h5' variant='h6'>\r\n                            {this.state.signupError}\r\n                        </Typography> :\r\n                        null\r\n                    }\r\n                    <Typography component='h5' variant='h6' className={classes.hasAccountHeader}>Already Have An Account?</Typography>\r\n                    <Link className={classes.logInLink} to='/login'>Log In!</Link>\r\n                </Paper>\r\n            </main>\r\n        );\r\n    }\r\n\r\n    formIsValid = () => this.state.password === this.state.passwordConformation;\r\n\r\n    userTyping = (type, e) => {\r\n        switch (type) {\r\n            case 'email':\r\n                this.setState({ email: e.target.value });\r\n                break;\r\n\r\n            case 'password':\r\n                this.setState({ password: e.target.value});\r\n                break;\r\n\r\n            case 'passwordConformation':\r\n                this.setState({ passwordConformation: e.target.value});\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    } \r\n\r\n    submitSignup = (e) => {\r\n        e.preventDefault();\r\n        // console.log('SUBMITING!', this.state);\r\n        if(!this.formIsValid()) {\r\n            this.setState({ signupError: 'Passwords do not match!' });\r\n            return;\r\n        }\r\n\r\n        firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n            .then(authRes => {\r\n                const userObj = {\r\n                    email: authRes.user.email\r\n                };\r\n                firebase\r\n                    .firestore()\r\n                    .collection('users')\r\n                    .doc(this.state.email)\r\n                    .set(userObj)\r\n                    .then(() => {\r\n                        this.props.history.push('/dashboard')\r\n                    }, dbError => {\r\n                        console.log(dbError);\r\n                        this.setState({ signupError: 'Failed to add user' });\r\n                    })\r\n            }, authError => {\r\n                console.log(authError);\r\n                this.setState({ signupError: 'Failed to add user!'})\r\n            })\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default withStyles(styles)(SignupComponent);","const styles = theme => ({\r\n    root: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      height: 'calc(100% - 35px)',\r\n      position: 'absolute',\r\n      left: '0',\r\n      width: '300px',\r\n      boxShadow: '0px 0px 2px black'\r\n    },\r\n    listItem: {\r\n      cursor: 'pointer'\r\n    },\r\n    newChatBtn: {\r\n      borderRadius: '0px'\r\n    },\r\n    unreadMessage: {\r\n      color: 'red',\r\n      position: 'absolute',\r\n      top: '0',\r\n      right: '5px'\r\n    }\r\n  });\r\n  \r\n  export default styles;","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport styles from \"./index\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport NotificationImportant from \"@material-ui/icons/NotificationImportant\";\r\n\r\nclass ChatListComponent extends React.Component {\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    if (this.props.chats.length > 0) {\r\n      return (\r\n        <div className={classes.root}>\r\n          <Button\r\n            variant=\"contained\"\r\n            fullWidth\r\n            color=\"primary\"\r\n            onClick={this.newChat}\r\n            className={classes.newChatBtn}>\r\n            New Message\r\n          </Button>\r\n          <List>\r\n            {this.props.chats.map((_chat, _index) => {\r\n              return (\r\n                <div key={_index}>\r\n                  <ListItem\r\n                    onClick={() => this.selectChat(_index)}\r\n                    className={classes.listItem}\r\n                    selected={this.props.selectedChatIndex === _index}\r\n                    alignItems=\"flex-start\"\r\n                  >\r\n                    <ListItemAvatar>\r\n                      <Avatar alt=\"Remy Sharp\">\r\n                        {\r\n                          _chat.users\r\n                            .filter(_user => _user !== this.props.userEmail)[0]\r\n                            .split(\"\")[0]\r\n                        }\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={\r\n                        _chat.users.filter(\r\n                          _user => _user !== this.props.userEmail\r\n                        )[0]\r\n                      }\r\n                      secondary={\r\n                        <React.Fragment>\r\n                          <Typography component=\"span\" color=\"textPrimary\">\r\n                            {_chat.messages[\r\n                              _chat.messages.length - 1\r\n                            ].message.substring(0, 30) + \" ...\"}\r\n                          </Typography>\r\n                        </React.Fragment>\r\n                      }\r\n                    />\r\n                    {_chat.receiverHasRead === false &&\r\n                    !this.userIsSender(_chat) ? (\r\n                      <ListItemIcon>\r\n                        <NotificationImportant\r\n                          className={classes.unreadMessage}\r\n                        ></NotificationImportant>\r\n                      </ListItemIcon>\r\n                    ) : null}\r\n                  </ListItem>\r\n                  <Divider />\r\n                </div>\r\n              );\r\n            })}\r\n          </List>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className={classes.root}>\r\n          <Button\r\n            variant=\"contained\"\r\n            fullWidth\r\n            color=\"primary\"\r\n            onClick={this.newChat}\r\n            className={classes.newChatBtn}>\r\n            New Message\r\n          </Button>\r\n          <List></List>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  userIsSender = chat =>\r\n    chat.messages[chat.messages.length - 1].sender === this.props.userEmail;\r\n\r\n  newChat = () => {\r\n    this.props.newChatBtnFn();\r\n  };\r\n  selectChat = index => {\r\n    this.props.selectChatFn(index);\r\n  };\r\n}\r\n\r\nexport default withStyles(styles)(ChatListComponent);\r\n","const styles = theme => ({\r\n    signOutBtn: {\r\n      position: 'absolute',\r\n      bottom: '0px',\r\n      left: '0px',\r\n      width: '300px',\r\n      borderRadius: '0px',\r\n      backgroundColor: '#227092',\r\n      height: '35px',\r\n      boxShadow: '0px 0px 2px black',\r\n      color: 'white'\r\n    },\r\n    flower: {\r\n      position: 'fixed',\r\n      top: '50%',\r\n      left: '50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    }\r\n  });\r\n  \r\n  export default styles;","const styles = theme => ({\r\n\r\n    content: {\r\n      height: 'calc(100vh - 100px)',\r\n      overflow: 'auto',\r\n      padding: '25px',\r\n      marginLeft: '300px',\r\n      boxSizing: 'border-box',\r\n      overflowY: 'scroll',\r\n      top: '50px',\r\n      width: 'calc(100% - 300px)',\r\n      position: 'absolute'\r\n    },\r\n  \r\n    userSent: {\r\n      float: 'left',\r\n      clear: 'both',\r\n      padding: '20px',\r\n      boxSizing: 'border-box',\r\n      wordWrap: 'break-word',\r\n      marginTop: '10px',\r\n      backgroundColor: '#707BC4',\r\n      color: 'white',\r\n      width: '300px',\r\n      borderRadius: '10px'\r\n    },\r\n  \r\n    friendSent: {\r\n      float: 'right',\r\n      clear: 'both',\r\n      padding: '20px',\r\n      boxSizing: 'border-box',\r\n      wordWrap: 'break-word',\r\n      marginTop: '10px',\r\n      backgroundColor: '#707BC4',\r\n      color: 'white',\r\n      width: '300px',\r\n      borderRadius: '10px'\r\n    },\r\n  \r\n    chatHeader: {\r\n      width: 'calc(100% - 301px)',\r\n      height: '50px',\r\n      backgroundColor: '#344195',\r\n      position: 'fixed',\r\n      marginLeft: '301px',\r\n      fontSize: '18px',\r\n      textAlign: 'center',\r\n      color: 'white',\r\n      paddingTop: '10px',\r\n      boxSizing: 'border-box'\r\n    }\r\n  \r\n  });\r\n  \r\n  export default styles;","import React from 'react';\r\nimport styles from './styles';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nclass ChatViewComponent extends React.Component {\r\n\r\n\r\n    componentDidUpdate = () => {\r\n        const container = document.getElementById('chatview-container');\r\n        if(container)\r\n            container.scrollTo(0, container.scrollHeight);\r\n    }\r\n\r\n    render() {\r\n\r\n        const { classes, chat, user } = this.props;\r\n\r\n        if(chat === undefined) {\r\n            return (<main id='chatview-container' className={classes.content}></main>)\r\n        } else {\r\n            return (\r\n                <div>\r\n                <div className={classes.chatHeader}>\r\n                    Your conversation with {chat.users.filter(_usr => _usr !== user)[0]}\r\n                </div>\r\n                <main id='chatview-container' className={classes.content}>\r\n                {\r\n                    chat.messages.map((_msg, _index) => {\r\n                        return(\r\n                        <div key={_index} className={_msg.sender === user ? classes.userSent : classes.friendSent }>\r\n                            {_msg.message}\r\n                        </div>\r\n                        )\r\n                    })\r\n                }\r\n                </main>\r\n            </div>\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default withStyles(styles)(ChatViewComponent);","const styles = theme => ({\r\n\r\n    sendBtn: {\r\n      color: 'blue',\r\n      cursor: 'pointer',\r\n      '&:hover': {\r\n        color: 'gray'\r\n      }\r\n    },\r\n  \r\n    chatTextBoxContainer: {\r\n      position: 'absolute',\r\n      bottom: '15px',\r\n      left: '315px',\r\n      boxSizing: 'border-box',\r\n      overflow: 'auto',\r\n      width: 'calc(100% - 300px - 50px)'\r\n    },\r\n  \r\n    chatTextBox: {\r\n      width: 'calc(100% - 25px)'\r\n    }\r\n  \r\n  });\r\n  \r\n  export default styles;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Send from '@material-ui/icons/Send';\r\nimport styles from './index';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nclass ChatTextBoxComponent extends React.Component{\r\n\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state={\r\n            chatText: ''\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const { classes } = this.props;\r\n\r\n\r\n        return(\r\n            <div className={classes.chatTextBoxContainer}>\r\n            <TextField placeholder=\"Type your message...\"\r\n            onKeyUp={(e) => this.userTyping(e)}\r\n            id='chattextbox'\r\n            className={classes.chatTextBox}\r\n            onFocus={this.userClickedInput}>\r\n            </TextField>\r\n            <Send onClick={this.submitMessage} className={classes.sendBtn}></Send>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    userTyping = (e) => {\r\n        e.keyCode === 13 ? this.submitMessage() : this.setState({ chatText: e.target.value});\r\n    }\r\n\r\n    messageValid = (txt) => txt && txt.replace(/\\s/g, '').length;\r\n\r\n    userClickedInput = () => this.props.messageReadFn;\r\n\r\n    submitMessage = () => {\r\n        if(this.messageValid(this.state.chatText)) {\r\n            this.props.submitMessageFn(this.state.chatText);\r\n            document.getElementById('chattextbox').value = '';\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(ChatTextBoxComponent);","const styles = theme => ({\r\n    main: {\r\n      width: 'auto',\r\n      display: 'block', // Fix IE 11 issue.\r\n      marginLeft: theme.spacing() * 3,\r\n      marginRight: theme.spacing() * 3,\r\n      [theme.breakpoints.up(400 + theme.spacing() * 3 * 2)]: {\r\n        width: 400,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n      },\r\n    },\r\n    paper: {\r\n      padding: `${theme.spacing() * 2}px ${theme.spacing() * 3}px ${theme.spacing() * 3}px`,\r\n      position: 'absolute',\r\n      width: '350px',\r\n      top: '50px',\r\n      left: 'calc(50% + 150px - 175px)'\r\n    },\r\n    input: {\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(),\r\n    },\r\n    submit: {\r\n      marginTop: theme.spacing() * 3\r\n    },\r\n    errorText: {\r\n      color: 'red',\r\n      textAlign: 'center'\r\n    }\r\n  });\r\n  \r\n  export default styles;","import React from 'react';\r\nimport { FormControl, InputLabel, Input, Button, Paper, withStyles, CssBaseline, Typography } from '@material-ui/core';\r\nimport styles from './index';\r\nconst firebase = require(\"firebase\");\r\n\r\nclass NewChatComponent extends React.Component {\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username: null,\r\n            message: null\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { classes } = this.props;\r\n\r\n        return(\r\n            <main className={classes.main}>\r\n                <CssBaseline></CssBaseline>\r\n                <Paper className={classes.paper}>\r\n                    <Typography component='h1' variant='h5'>Send A Message!</Typography>\r\n                    <form className={classes.form} onSubmit={(e) => this.submitNewChat(e)}>\r\n                        <FormControl fullWidth>\r\n                        <InputLabel htmlFor=\"new-chat-username\">\r\n                            Enter your Friend's Email\r\n                        </InputLabel>\r\n                        <Input required\r\n                            className={classes.input}\r\n                            autoFocus\r\n                            onChange={(e) => this.userTyping('username', e)}\r\n                            id='new-chat-username'></Input>\r\n                        </FormControl>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel htmlFor=\"new-chat-message\">\r\n                                Enter your Message\r\n                            </InputLabel>\r\n                            <Input required \r\n                                className={classes.input}\r\n                                onChange={(e) => this.userTyping('message', e)}\r\n                                id='new-chat-message'></Input>\r\n                        </FormControl>\r\n                        <Button fullWidth className={classes.submit} variant=\"contained\" color=\"primary\" type=\"submit\"></Button>\r\n                    </form>\r\n                </Paper>\r\n            </main>\r\n        );\r\n    }\r\n\r\n    userTyping = (type, e) => {\r\n        switch(type) {\r\n            case 'username':\r\n                this.setState({ username: e.target.value });\r\n                break;\r\n            \r\n            case 'message':\r\n                this.setState({ message: e.target.value });\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    submitNewChat = async (e) => {\r\n        e.preventDefault();\r\n        const userExists = await this.userExists();\r\n        if(userExists) {\r\n            const chatExists = await this.chatExists();\r\n            chatExists ? this.goToChat() : this.createChat();\r\n        }\r\n    }\r\n\r\n    createChat = () => {\r\n        this.props.newChatSubmitFn({\r\n            sendTo: this.state.username,\r\n            message: this.state.message\r\n        });\r\n    }\r\n\r\n    goToChat = () => this.props.goToChatFn(this.buildDocKey(), this.state.message);\r\n\r\n    buildDocKey = () => {\r\n        return [firebase.auth().currentUser.email, this.state.username].sort().join(':');\r\n    }\r\n\r\n    chatExists = async () => {\r\n        const docKey = this.buildDocKey();\r\n        const chat = await firebase\r\n            .firestore()\r\n            .collection('chats')\r\n            .doc(docKey)\r\n            .get();\r\n        console.log(chat.exists);\r\n        return chat.exists;\r\n            \r\n    }\r\n\r\n    userExists = async () => {\r\n        const usersSnapshot = await firebase\r\n            .firestore()\r\n            .collection('users')\r\n            .get();\r\n        const exists = usersSnapshot.docs\r\n            .map(_doc => _doc.data().email)\r\n            .includes(this.state.username);\r\n        return exists;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default withStyles(styles)(NewChatComponent);","import React from 'react';\r\nimport ChatListComponent from '../chatlist/chatList';\r\nimport { Button, withStyles } from '@material-ui/core';\r\nimport styles from './styles';\r\nimport ChatViewComponent from '../chatview/chatview';\r\nimport ChatTextBoxComponent from '../chattextbox/chatTextBox';\r\nimport NewChatComponent from '../newchat/newChat';\r\nimport FlowerSpinner from \"@bit/bondz.react-epic-spinners.flower-spinner\";\r\n\r\nconst firebase = require(\"firebase\");\r\n\r\nclass DashboardComponent extends React.Component {\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            selectedChat: null,\r\n            newChatFormVisible: false,\r\n            email: null,\r\n            chats: []\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n\r\n        const { classes } = this.props;\r\n\r\n        if(this.state.email) {\r\n            return(\r\n              <div className='dashboard-container' id='dashboard-container'>\r\n                <ChatListComponent history={this.props.history} \r\n                  userEmail={this.state.email} \r\n                  selectChatFn={this.selectChat} \r\n                  chats={this.state.chats} \r\n                  selectedChatIndex={this.state.selectedChat}\r\n                  newChatBtnFn={this.newChatBtnClicked}>\r\n                </ChatListComponent>\r\n                {\r\n                  this.state.newChatFormVisible ? null : <ChatViewComponent \r\n                    user={this.state.email} \r\n                    chat={this.state.chats[this.state.selectedChat]}>\r\n                  </ChatViewComponent>\r\n                }\r\n                { \r\n                  this.state.selectedChat !== null && !this.state.newChatFormVisible ? <ChatTextBoxComponent userClickedInputFn={this.messageRead} submitMessageFn={this.submitMessage}></ChatTextBoxComponent> : null \r\n                }\r\n                {\r\n                  this.state.newChatFormVisible ? <NewChatComponent goToChatFn={this.goToChat} newChatSubmitFn={this.newChatSubmit}></NewChatComponent> : null\r\n                }\r\n                <Button onClick={this.signOut} className={classes.signOutBtn}>Sign Out</Button>\r\n              </div>\r\n            );\r\n          } else {\r\n            return(\r\n                <div>\r\n                <FlowerSpinner color='#000000' size='200' className={classes.flower}></FlowerSpinner>\r\n                </div>\r\n            );\r\n          }\r\n        }\r\n\r\n    signOut = () => firebase.auth().signOut();\r\n\r\n    selectChat = async (chatIndex) => {\r\n        await this.setState({ selectedChat: chatIndex, newChatFormVisible: false })\r\n        this.messageRead();\r\n    }\r\n\r\n    submitMessage = (msg) => {\r\n        const docKey = this.buildDocKey(this.state.chats[this.state.selectedChat].users.filter(_usr => _usr !== this.state.email)[0])\r\n        firebase\r\n            .firestore()\r\n            .collection('chats')\r\n            .doc(docKey)\r\n            .update({\r\n                messages: firebase.firestore.FieldValue.arrayUnion({\r\n                    sender: this.state.email,\r\n                    message: msg,\r\n                    timestamp: Date.now()\r\n                }),\r\n                receiverHasRead: false\r\n            });\r\n    }\r\n\r\n    buildDocKey = (friend) => [this.state.email, friend].sort().join(\":\");\r\n\r\n\r\n    newChatBtnClicked = () => this.setState({ newChatFormVisible: true, selectedChat: null })\r\n\r\n\r\n    messageRead = () => {\r\n        const docKey = this.buildDocKey(this.state.chats[this.state.selectedChat].users.filter(_usr => _usr !== this.state.email)[0]);\r\n        if(this.clickedChatWhereNotSender(this.state.selectedChat)) {\r\n            firebase\r\n                .firestore()\r\n                .collection('chats')\r\n                .doc(docKey)\r\n                .update({ receiverHasRead: true})\r\n        } else {\r\n            console.log('Clicked message were the user was the sender!')\r\n        } \r\n    }\r\n\r\n    goToChat = async (docKey, msg) => {\r\n        const usersInChat = docKey.split(':');\r\n        const chat = this.state.chats.find(_chat => usersInChat.every(_user => _chat.users.includes(_user)));\r\n        this.setState({ newChatFormVisible: false});\r\n        await this.selectChat(this.state.chats.indexOf(chat));\r\n        this.submitMessage(msg);\r\n    }\r\n\r\n    newChatSubmit = async (chatObj) => {\r\n        const docKey = this.buildDocKey(chatObj.sendTo);\r\n        await firebase\r\n            .firestore()\r\n            .collection('chats')\r\n            .doc(docKey)\r\n            .set({\r\n                receiverHasRead: false,\r\n                users: [this.state.email, chatObj.sendTo],\r\n                messages: [{\r\n                    message: chatObj.message,\r\n                    sender: this.state.email\r\n                }]\r\n            })\r\n        this.setState({ newChatFormVisible: false});\r\n        this.selectChat(this.state.chats.length - 1);\r\n    }\r\n\r\n\r\n    clickedChatWhereNotSender = (chatIndex) => this.state.chats[chatIndex].messages[this.state.chats[chatIndex].messages.length - 1] !== this.state.email;\r\n\r\n\r\n\r\n    componentDidMount = () => {\r\n        firebase.auth().onAuthStateChanged(async _usr => {\r\n            if(!_usr)\r\n                this.props.history.push('/login');\r\n            else {\r\n                await firebase\r\n                    .firestore()\r\n                    .collection('chats')\r\n                    .where('users', 'array-contains', _usr.email)\r\n                    .onSnapshot(async res => {\r\n                        const chats = res.docs.map(_doc => _doc.data())\r\n                        await this.setState({\r\n                            email: _usr.email,\r\n                            chats: chats\r\n                        });\r\n                        console.log(this.state)\r\n                    })\r\n            }\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(DashboardComponent);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\nimport * as firebase from 'firebase';\nimport LoginComponent from './components/login/login';\nimport SignupComponent from './components/signup/signup';\nimport DashboardComponent from './components/dashboard/dashboard';\n\n\n// const firebase = require(\"firebase\");\nrequire(\"firebase/firestore\");\n  \nfirebase.initializeApp({\n    apiKey: \"AIzaSyBQqnPIhInZas7Q9a0Yo4XylGj8f4mFOME\",\n    authDomain: \"chatui-c159b.firebaseapp.com\",\n    databaseURL: \"https://chatui-c159b.firebaseio.com\",\n    projectId: \"chatui-c159b\",\n    storageBucket: \"chatui-c159b.appspot.com\",\n    messagingSenderId: \"733539814991\",\n    appId: \"1:733539814991:web:9702379421480f5c60243a\",\n    measurementId: \"G-7WDPDMNW2D\"\n});\n\n// firebase.analytics();\n\nconst routing = (\n    <Router>\n        <div id='routing-container'>\n            <Route path='/login' component={LoginComponent}></Route>\n            <Route path='/signup' component={SignupComponent}></Route>\n            <Route path='/dashboard' component={DashboardComponent}></Route>\n        </div>\n    </Router>\n);\n\nReactDOM.render(routing, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}